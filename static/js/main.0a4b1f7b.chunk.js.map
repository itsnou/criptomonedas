{"version":3,"sources":["cryptomonedas.png","components/Error.js","hooks/useMoneda.js","hooks/useCriptomonedas.js","components/Formulario.js","components/Cotizacion.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["MensajeError","styled","p","Error","mensaje","Label","label","Select","select","useMoneda","stateInicial","opciones","useState","state","actualizarState","onChange","e","target","value","map","opcion","codigo","nombre","useCriptomonedas","CoinInfo","Name","FullName","Id","Boton","input","Formulario","guardarMoneda","guardarCriptomoneda","listacripto","guardarCriptomonedas","error","guardarError","moneda","SelectMonedas","criptomoneda","SelectCripto","useEffect","a","axios","get","resultado","data","Data","consultarAPI","onSubmit","preventDefault","type","ResultadoDiv","div","Info","Precio","Cotizacion","Object","keys","length","console","log","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","class","Contenedor","Imagen","img","Heading","h1","App","guardarResultado","cargando","guardarCargando","url","setTimeout","DISPLAY","cotizarCriptomoneda","componente","src","imagen","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a4b1f7b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst MensajeError= styled.p`\r\n    background-color: #b7322c;\r\n    padding: 1rem;\r\n    color: #FFF;\r\n    font-size: 30px;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    font-family: 'Bebas Neue', cursive;\r\n`\r\n\r\nconst Error = ({mensaje}) =>{\r\n    return(\r\n        <MensajeError>{mensaje}</MensajeError>\r\n    )\r\n}\r\n\r\nexport default Error;","import React, {Fragment, useState } from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Label = styled.label`\r\n    font-family: 'Bebas Neue', cursive;\r\n    color: #FFF;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 2.4rem;\r\n    margin-top: 2rem;\r\n    display:block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width: 100%;\r\n    display: block;\r\n    padding: 1rem;\r\n    -webkit-appearance: none;\r\n    border-radius: 10px;\r\n    border: none;\r\n    fonst-size: 1.2rem;\r\n`;\r\n\r\nconst useMoneda = (label, stateInicial, opciones) => {\r\n\r\n    //State de custom hook\r\n    const [state,actualizarState] = useState(stateInicial);\r\n\r\n    const Seleccionar = () =>(\r\n        <Fragment>\r\n        <Label>{label}</Label>\r\n        <Select\r\n            onChange={ e => actualizarState(e.target.value)}\r\n            value={state}\r\n        >\r\n            <option value=\"\">-- Seleccione --</option>\r\n            {opciones.map(opcion => (\r\n                <option key={opcion.codigo} value={opcion.codigo} >{opcion.nombre}</option>\r\n            ))}\r\n        </Select>\r\n        </Fragment>\r\n    )\r\n\r\n    //Retornar state, interfaz y fn que modifica el state\r\n    return [state, Seleccionar , actualizarState];\r\n\r\n}\r\n\r\nexport default useMoneda;","import React, {Fragment, useState } from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Label = styled.label`\r\n    font-family: 'Bebas Neue', cursive;\r\n    color: #FFF;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 2.4rem;\r\n    margin-top: 2rem;\r\n    display:block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width: 100%;\r\n    display: block;\r\n    padding: 1rem;\r\n    -webkit-appearance: none;\r\n    border-radius: 10px;\r\n    border: none;\r\n    fonst-size: 1.2rem;\r\n`;\r\n\r\nconst useCriptomonedas = (label, stateInicial, opciones) => {\r\n\r\n    //State de custom hook\r\n    const [state,actualizarState] = useState(stateInicial);\r\n\r\n    const SelectCripto = () =>(\r\n        <Fragment>\r\n        <Label>{label}</Label>\r\n        <Select\r\n            onChange={ e => actualizarState(e.target.value)}\r\n            value={state}\r\n        >\r\n            <option value=\"\">-- Seleccione --</option>\r\n            {opciones.map(opcion => (\r\n                <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name} >{opcion.CoinInfo.FullName}</option>\r\n            ))}\r\n        </Select>\r\n        </Fragment>\r\n    )\r\n\r\n    //Retornar state, interfaz y fn que modifica el state\r\n    return [state, SelectCripto , actualizarState];\r\n\r\n}\r\n\r\nexport default useCriptomonedas;","import React, { useEffect, useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Error from './Error';\r\nimport useMoneda from '../hooks/useMoneda';\r\nimport useCriptomonedas from '../hooks/useCriptomonedas';\r\nimport axios from 'axios';\r\n\r\nconst Boton = styled.input`\r\n    margin-top: 20px;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n    background-color: #66a2fe;\r\n    boder:none;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    color: #FFF;\r\n    transition: background-color .3s ease;\r\n\r\n    &:hover{\r\n        background-color: #326AC0;\r\n        cursor:pointer;\r\n    }\r\n`\r\n\r\nconst Formulario = ( { guardarMoneda, guardarCriptomoneda}) => {\r\n\r\n    //state del listado de criptomonedas\r\n    const [listacripto, guardarCriptomonedas]= useState([]);\r\n    const [ error, guardarError] = useState(false);\r\n\r\n    \r\n\r\n    const MONEDAS = [\r\n        { codigo: 'ARS', nombre: 'Peso Argentino'},\r\n        { codigo: 'USD', nombre: 'Dolar de Estados Unidos'},\r\n        { codigo: 'MXN', nombre: 'Peso Mexicano'},\r\n        { codigo: 'EUR', nombre: 'Euro'},\r\n        { codigo: 'GBP', nombre: 'Liba Esterlina'}\r\n    ]\r\n    // Usando el usemoneda\r\n    const [ moneda, SelectMonedas ] = useMoneda('Elige tu moneda', '', MONEDAS);\r\n\r\n    // Usando el usecriptomoneda\r\n    const [ criptomoneda, SelectCripto] = useCriptomonedas('Elige tu Criptomoneda', '' , listacripto);\r\n\r\n    // Llamado a la API\r\n    useEffect(()=>{\r\n        const consultarAPI = async()=>{\r\n            const url= 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\r\n\r\n            const resultado = await axios.get(url);\r\n\r\n            guardarCriptomonedas(resultado.data.Data);\r\n        }\r\n\r\n        consultarAPI();\r\n    }, [])\r\n\r\n    const cotizarMoneda = e => {\r\n        e.preventDefault();\r\n\r\n        // validad si ambos campos estan llenos\r\n        if(moneda === '' || criptomoneda === ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        // pasar los datos al componente principal\r\n        guardarError(false);\r\n        guardarMoneda(moneda);\r\n        guardarCriptomoneda(criptomoneda);\r\n    }\r\n\r\n    return( \r\n        <form\r\n            onSubmit={cotizarMoneda}\r\n        >\r\n        { error ? <Error mensaje=\"Todos los campos son obligatorios\"/> : null}\r\n            <SelectMonedas/>\r\n            <SelectCripto/>\r\n            <Boton\r\n                type=\"submit\"\r\n                value=\"Calcular\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Formulario;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst ResultadoDiv = styled.div`\r\n    color: #FFF;\r\n`;\r\n\r\nconst Info = styled.p`\r\n    font-size: 18px;\r\n    span{\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst Precio = styled.p`\r\n    font-size: 30px;\r\n    span{\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst Cotizacion = ({resultado}) =>{\r\n    if(Object.keys(resultado).length===0) return null;\r\n    console.log(resultado);\r\n\r\n    return (\r\n        <ResultadoDiv>\r\n            <Precio>El precio es: <span>{resultado.PRICE}</span></Precio>\r\n            <Info>Precio mas alto del día: <span>{resultado.HIGHDAY}</span></Info>\r\n            <Info>Precio mas bajo del día: <span>{resultado.LOWDAY}</span></Info>\r\n            <Info>Variación las últimas 24hs: <span>{resultado.CHANGEPCT24HOUR}</span></Info>\r\n            <Info>Última Actualización: <span>{resultado.LASTUPDATE}</span></Info>\r\n        </ResultadoDiv>\r\n        )\r\n}\r\n\r\nexport default Cotizacion;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () =>{\r\n    return(\r\n        <div class=\"sk-chase\">\r\n            <div class=\"sk-chase-dot\"></div>\r\n            <div class=\"sk-chase-dot\"></div>\r\n            <div class=\"sk-chase-dot\"></div>\r\n            <div class=\"sk-chase-dot\"></div>\r\n            <div class=\"sk-chase-dot\"></div>\r\n            <div class=\"sk-chase-dot\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, {useState, useEffect} from 'react';\nimport styled from '@emotion/styled';\nimport imagen from './cryptomonedas.png';\nimport Formulario from './components/Formulario';\nimport Cotizacion from './components/Cotizacion';\nimport Spinner from './components/Spinner';\nimport axios from 'axios';\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width: 992px){\n    display: grid;\n    grid-template-columns: repeat(2,1fr);\n    colum-gap: 2rem;\n  }\n`;\n\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\n\nconst Heading = styled.h1`\n  font-family: 'Bebas Neue', cursive;\n  color: #FFF;\n  text-align: left;\n  font-width: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n\n  &::after{\n    content: '';\n    width: 100px;\n    height: 6px;\n    background-color: #66A2FE;\n    display:block;\n  }\n`\n\nfunction App() {\n\n  const [moneda, guardarMoneda ] = useState('');\n  const [criptomoneda, guardarCriptomoneda] = useState('');\n  const [resultado, guardarResultado ] = useState({});\n  const [cargando, guardarCargando ] = useState(false);\n\n  useEffect(() =>{\n\n    const cotizarCriptomoneda = async () =>{\n        if(moneda === '') return;\n\n        // consulta de api \n        const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n    \n        const resultado = await axios.get(url);\n\n        // mostrar el spinner\n        guardarCargando(true);\n\n        // ocultar el spinner y mostrar resultado\n        setTimeout(() =>{\n          guardarCargando(false);\n          guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n        }, 3000)\n    }\n    cotizarCriptomoneda();\n  },[moneda,criptomoneda])\n\n  //Mostrar spinner \n  const componente = (cargando) ? <Spinner/> : <Cotizacion resultado={resultado}/>\n\n  return (\n    <Contenedor>\n      <div>\n        <Imagen\n          src={imagen}\n          alt=\"ImagenCripto\"\n        />\n      </div>\n      <div>\n        <Heading>\n          Cotiza Criptomonedas al Instante\n        </Heading>\n        <Formulario \n          guardarMoneda={guardarMoneda}\n          guardarCriptomoneda={guardarCriptomoneda}\n        />\n\n        {componente}\n\n      </div>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}